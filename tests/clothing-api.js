const {ClarifaiStub, grpc} = require("clarifai-nodejs-grpc");
const fs = require('fs');
const imageBytes = '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';//fs.readFileSync("/Users/lunchbox/Desktop/shirt.jpeg");

console.log(imageBytes);

const stub = ClarifaiStub.grpc();
const CLARIFAI_API_KEY = "b8bf4001705c469fa724529322850a3f"; 

const metadata = new grpc.Metadata();
metadata.set("authorization", "Key " + CLARIFAI_API_KEY);
stub.PostModelOutputs(
    {
        /* idk what this is but it works! */
        model_id: "aaa03c23b3724a16a56b629203edc62c",
        inputs: [{data: {image: {base64: imageBytes}}}]
    },
    metadata,
    (err, response) => {
        if (err) {
            console.log("Error: " + err);
            return;
        }

        if (response.status.code !== 10000) {
            console.log("Received failed status: " + response.status.description + "\n" + response.status.details);
            return;
        }

        console.log("Predicted concepts, with confidence values:")
        for (const c of response.outputs[0].data.concepts) {
            console.log(c.name + ": " + c.value);
        }
    }
);